// Generated by CoffeeScript 1.8.0
(function() {
  var helpers;

  helpers = require('helpers');

  exports.f = function(map) {
    var bubbles, heat;
    bubbles = function() {
      var distance;
      bubbles = _.map(sample, function(entry) {
        var _ref;
        entry = {
          name: "ip: " + entry.ip + "<br>hostname: " + entry.hostname + "<br>city: " + entry.city + "<br>ping: " + entry.ping,
          radius: 5,
          yeild: 15000,
          defaultFillColor: 'green',
          borderWidth: 1,
          borderColor: "rgba(" + entry.ping + "," + (255 - entry.ping) + ",0,1)",
          popupOnHover: true,
          fillOpacity: 0.2,
          fill: "rgb(" + entry.ping + "," + (255 - entry.ping) + ",0)",
          highlightOnHover: false,
          highlightFillColor: 'green',
          highlightBorderColor: 'rgba(250, 15, 160, 0.2)',
          highlightBorderWidth: 2,
          highlightFillOpacity: 0.85,
          latitude: entry.loc.latitude,
          longitude: entry.loc.longitude
        };
        _ref = map.latLngToXY(entry.latitude, entry.longitude), entry.x = _ref[0], entry.y = _ref[1];
        return entry;
      });
      distance = function(entry1, entry2) {
        return Math.abs(entry1.x - entry2.x) + Math.abs(entry1.y - entry2.y);
      };
      bubbles = _.map(bubbles, (function(_this) {
        return function(entry) {
          var r;
          r = _.reduce(bubbles, (function(radius, entryCompare) {
            var d;
            if (entry === entryCompare) {
              return radius;
            }
            if ((d = distance(entry, entryCompare)) < radius) {
              return d;
            } else {
              return radius;
            }
          }), 200);
          entry.radius = Math.round(r / 2);
          return entry;
        };
      })(this));
      return map.bubbles(bubbles);
    };
    heat = function() {
      return map.heatMap(window.heat = _.map(sample, function(entry) {
        return {
          radius: 50,
          val: entry.ping / 100,
          latitude: entry.loc.latitude,
          longitude: entry.loc.longitude
        };
      }));
    };
    return bubbles();
  };

}).call(this);
